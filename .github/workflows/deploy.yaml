name: Deploy with Ansible

on:
  workflow_dispatch:

env:
  DOCKER_IMAGE: careagain/careagain-webapp

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.VIRTUAL_MACHINE_IP }} >> ~/.ssh/known_hosts

      - name: Create Ansible inventory
        run: |
          echo "[linode]" > inventory.ini
          echo "${{ secrets.VIRTUAL_MACHINE_IP }} ansible_user=root" >> inventory.ini

      - name: Create env file
        run: |
          cat << EOF > .env
          SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_DB_SCHEMA=${{ secrets.SUPABASE_DB_SCHEMA}}
          SUPABASE_DB_URI=${{ secrets.SUPABASE_DB_URI }}
          SUPABASE_S3_ACCESS_KEY_ID=${{ secrets.SUPABASE_S3_ACCESS_KEY_ID}}
          SUPABASE_S3_BUCKET=${{ secrets.SUPABASE_S3_BUCKET}}
          SUPABASE_S3_SECRET_ACCESS_KEY=${{ secrets.SUPABASE_S3_SECRET_ACCESS_KEY}}
          SUPABASE_URL=${{ secrets.SUPABASE_URL}}
          DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          EOF

      - name: Create Ansible Vars file
        run: |
          cat << EOF > devops/vars.yaml
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          EOF

      - name: Run Ansible playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
        run: |
          ansible-playbook -i inventory.ini devops/playbook.yaml

      - name: Remove vars file
        run: rm devops/vars.yaml && rm .env
        if: always()
